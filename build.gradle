buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7.1'
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.9.0'
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:2.2.6'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

subprojects {
    group 'com.pakulov.kafka'
    version '0.10.2'

    ext {
        kafkaVersion = "0.10.2.1"
        confluentVersion = "3.2.1"
    }

    repositories {
        mavenCentral()
        maven {
            url "http://packages.confluent.io/maven/"
        }
    }

    apply plugin: 'license'
    apply plugin: 'maven-publish'
    apply plugin: 'nexus'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'eclipse'
    apply plugin: 'java'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    modifyPom {
        project {
            name 'Kafka Graphite Metrics Reporter'
            description 'Graphite integration for Kafka Metrics Reporter'
            url 'https://github.com/apakulov/kafka-graphite'
            inceptionYear '2015'

            scm {
                url 'https://github.com/apakulov/kafka-graphite'
                connection 'scm:git:git@github.com:apakulov/kafka-graphite.git'
                developerConnection 'scm:git:ssh@github.com:apakulov/kafka-graphite.git'
            }

            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'apakulov'
                    name 'Alexander Pakulov'
                    email 'a.pakulov@gmail.com'
                }
            }
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                artifact jar
            }
        }
    }

    license {
        header rootProject.file('LICENSE')
    }
}

project(':kafka-graphite') {
    apply plugin: 'os-package'
    apply plugin: 'scala'

    ext {
        ext.baseScalaVersion = '2.11'
        if (project.hasProperty('scalaVersion')) {
            String scalaVersion = project.property('scalaVersion');
            ext.baseScalaVersion = scalaVersion.substring(0, scalaVersion.lastIndexOf('.'))
        }
    }

    dependencies {
        compile "org.apache.kafka:kafka_$baseScalaVersion:$kafkaVersion"
        compile "com.yammer.metrics:metrics-graphite:2.2.0"

        testCompile "org.scalatest:scalatest_$baseScalaVersion:3.0.3"
    }

    project.afterEvaluate {
        project.tasks.each {
            task -> if (task.name.toLowerCase().endsWith('jar'))
                task.baseName = "kafka_${baseScalaVersion}-graphite"
        }
    }

    ospackage {
        release = '1'
        os = 'LINUX'

        into '/opt/kafka'

        from(jar.outputs.files) {
            into 'libs'
        }

        from(configurations.compile) {
            include 'metrics-graphite*'
            into 'libs'
        }
    }
}

project(':kafka-graphite-clients') {
    dependencies {
        compile "org.apache.kafka:kafka-clients:$kafkaVersion",
                "io.confluent:common-metrics:$confluentVersion"
        testCompile "org.hamcrest:hamcrest-junit:2.0.0.0",
                'org.powermock:powermock-core:1.6.1',
                'org.powermock:powermock-module-junit4:1.6.1',
                'org.powermock:powermock-api-mockito:1.6.1'
    }
}
